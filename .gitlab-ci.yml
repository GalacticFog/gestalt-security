stages:
- test
- publish
- deploy

cache:
  key: "$CI_PIPELINE_ID"
  untracked: true

variables:
  POSTGRES_DB: gestalt-security
  POSTGRES_USER: gestaltdev
  POSTGRES_PASSWORD: letmein
  DATABASE_HOSTNAME: postgres
  DATABASE_NAME: gestalt-security
  DATABASE_PORT: "5432"
  DATABASE_USERNAME: gestaltdev
  DATABASE_PASSWORD: letmein
  ROOT_USERNAME: root
  ROOT_PASSWORD: letmein
  TEST_LDAP_URL: "ldap://galacticfog__test-ldap:389"
  TEST_LDAP_USER: admin
  TEST_LDAP_PASS: password
  IMG: "galacticfog.artifactoryonline.com/gestalt-security"

test:
  stage: test
  services:
    - postgres:9.4
    - galacticfog/test-ldap:0.1.0
  script:
    - ./activator clean update test docker:stage

publish-branch:
  stage: publish
  script: 
    - VER=$(grep "^version" build.sbt | sed 's/.*:=[ ]*//' | sed 's/"//g')
    - TAG=$VER-${CI_BUILD_REF:0:8}
    - cd target/docker/stage
    - docker build -t $IMG:$TAG
    - docker push     $IMG:$TAG
  only:
    - branches

publish-tag: 
  stage: publish
  script:
    - cd target/docker/stage
    - docker build -t $IMG:$CI_BUILD_TAG
    - docker push     $IMG:$CI_BUILD_TAG
  only:
    - tags

deploy-to-test:
  stage: deploy
  environment: test
  script: 
    - echo checking for access to marathon
    - curl http://marathon.mesos:8080/v2/apps/gestalt-test/security || true
